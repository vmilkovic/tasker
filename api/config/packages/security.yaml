security:
    enable_authenticator_manager: true
    password_hashers:
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
          pattern: ^/_(profiler|wdt)
          security: false

        tasker_api_token_refresh:
            pattern: ^/tasker-api/token/refresh
            stateless: true
            user_checker: security.user.provider.concrete.app_user_provider

        tasker_api:
            pattern: ^/tasker-api
            stateless: true
            provider: app_user_provider
            jwt: ~
            entry_point: app.jwt_token_authenticator
            json_login:
                check_path: /tasker-api/authentication
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            guard:
                authenticators:
                    - app.jwt_token_authenticator

    access_control:
        - { path: ^/tasker-api/docs, roles: [IS_AUTHENTICATED_ANONYMOUSLY ,PUBLIC_ACCESS], methods: [GET] } # Allows accessing the Swagger UI
        - { path: ^/tasker-api/authentication, roles: [IS_AUTHENTICATED_ANONYMOUSLY ,PUBLIC_ACCESS], methods: [POST] }
        - { path: ^/tasker-api/token/refresh, roles: [IS_AUTHENTICATED_ANONYMOUSLY ,PUBLIC_ACCESS] , methods: [POST] }
        - { path: ^/tasker-api/users, roles: [IS_AUTHENTICATED_ANONYMOUSLY ,PUBLIC_ACCESS], methods: [POST] }
        - { path: ^/tasker-api, roles: [IS_AUTHENTICATED_FULLY, ROLE_USER] }
